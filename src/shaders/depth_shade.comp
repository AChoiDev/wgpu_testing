#version 460 core

layout (local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout(set = 0, binding = 0, r32f) uniform readonly image2D depthInput;
layout(set = 0, binding = 1, r11f_g11f_b10f) uniform writeonly image2D outputColor;
layout(set = 0, binding = 6, r16ui) uniform uimage3D indexMap;

void main() {
    ivec2 pixel_pos = ivec2(gl_GlobalInvocationID.xy);

    float rayLength = imageLoad(depthInput, pixel_pos).r;

    imageStore(outputColor, pixel_pos, vec4(exp(rayLength * 0.2 * -0.189)));
    // if (rayLength > 0) {
    //     imageStore(outputColor, pixel_pos, vec4(0.0));
    // } else {
    //     imageStore(outputColor, pixel_pos, vec4(1.0));
    // }

    if (pixel_pos.x < 45 * 15 && pixel_pos.y < 45) {
        ivec3 loadCoords = ivec3(pixel_pos.x % 45, pixel_pos.x / 45, pixel_pos.y % 45);
        uint index = imageLoad(indexMap, loadCoords).r;
        // float color = (float(index) * 0.01) + 0.01;
        vec3 color;
        uint modIndex = index % 3;
        if (modIndex == 0) {
            color = vec3(1.0, 0.0, 0.0);
        }
        if (modIndex == 1) {
            color = vec3(0.0, 1.0, 0.0);
        }
        if (modIndex == 2) {
            color = vec3(0.0, 0.0, 1.0);
        }
        if (index == 65535) {
            color = vec3(0.02);
        }
        imageStore(outputColor, pixel_pos, vec4(color, 1.0));
    }
}